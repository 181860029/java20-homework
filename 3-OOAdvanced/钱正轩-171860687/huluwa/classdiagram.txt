@startuml
package "cn.edu.nju.hulu"{

    abstract class AbstractSorter{
        -String name
        -String complexity
        +AbstractSorter(String name, String complexity)
        +{abstract} void sort(Sortable list)
    }

    class InsertSorter{
        +InsertSorter()
        +void sort(Sortable list)
    }

    class QuickSorter{
        +QuickSorter()
        +void sort(Sortable list)
    }

    class Grandpa{
        -Sortable sortable
        -AbstractSorter sorter
        +Grandpa(AbstractSorter sorter, Sortable sortable)
        +void sortByOrchestration()
    }

    class HuLuBrothers{
        -{static} final int HULUWA_NUM
        -{static} final HuLuWa BOUND
        -{static} HuLuBrothers huLuBrothers
        -final List<HuLuWa> hulu
        +{static} HuLuBrothers getHuLuBrothers()
        +void shuffle()
        +void print()
        +void sortByChoreography()
        -HuLuBrothers()
        -void setAdj()
    }

    class HuLuWa{
        -final Order order
        -final String name
        -HuLuWa left
        -HuLuWa right
        ~HuLuWa(Order order, String name)
        +void swap(HuLuWa h)
    }

    interface Sortable{
        +int size()
        +int compare(int a, int b)
        +void swap(int a, int b)
    }

    AbstractSorter ^-- InsertSorter
    AbstractSorter ^-- QuickSorter
    Sortable ^.. HuLuBrothers
    HuLuBrothers *-- HuLuWa
    Grandpa o-- Sortable
    Grandpa o-- AbstractSorter
}

class Main{
    +{static} void main(String args[])
}

Grandpa <-- Main
HuLuBrothers <-- Main

@enduml